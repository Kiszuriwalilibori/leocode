{"version":3,"sources":["redux/usersReducer.js","js/functions.js","js/fixtures.js","components/ClearButton.jsx","components/Input.jsx","components/Header.jsx","components/Pagination.jsx","components/Loader.jsx","App.js","reportWebVitals.js","index.js"],"names":["showError","createAction","clearError","fetchUsersFailed","fetchUsersSuccess","fetchUsersRequested","matchingUsersFound","matchingUsersNotFound","changePage","initialState","error","value","code","doesFetchWork","allUsers","matchingUsers","currentPageNumber","numberOfPages","usersReducer","createReducer","builder","addCase","state","action","payload","paginationUtils","getNumberOfPages","addDefaultCase","fetchUsers","dispatch","fetch","then","response","json","data","catch","err","message","searchUsers","pattern","getState","users","length","filter","item","name","toLowerCase","includes","pageLength","this","array","Math","ceil","index","threshold","first","last","slice","ClearButton","props","isClearButtonVisible","clearInput","className","onClick","width","height","version","viewBox","d","Input","inputContent","onInputContentChange","onInputClear","type","onChange","autoCapitalize","placeholder","Header1","styled","h1","Header","React","Pagination","connect","page","count","variant","color","event","withStyles","root","margin","marginTop","marginBottom","justifyContent","paddingLeft","paddingRight","background","border","boxShadow","UnconnectedPagination","propTypes","PropTypes","number","string","animation","keyframes","animationRule","css","Spinner","div","Loader","UsersList","lazy","ErrorMessageBox","App","useState","setPattern","updatePattern","useCallback","e","preventDefault","target","useEffect","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d56f448d.chunk.js","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\r\nimport {paginationUtils} from \"../js/functions\";\r\nexport const showError = createAction(\"ERROR_SHOW\");\r\nexport const clearError = createAction(\"ERROR_CLEAR\");\r\nexport const fetchUsersFailed = createAction(\"FETCH_USERS_FAIL\");\r\nexport const fetchUsersSuccess = createAction(\"FETCH_USERS_SUCCESS\");\r\nexport const fetchUsersRequested = createAction(\"FETCH_USERS_START\");\r\nexport const matchingUsersFound = createAction(\"MATCHING_USERS_SUCCESS\");\r\nexport const matchingUsersNotFound = createAction(\"MATCHING_USERS_FAIL\");\r\nexport const changePage = createAction(\"PAGE_CHANGE\");\r\n\r\nconst initialState = {\r\n  error: { value: false, code: \"\" },\r\n  doesFetchWork: false,\r\n  allUsers: [],\r\n  matchingUsers: [],\r\n  currentPageNumber: 1,\r\n  numberOfPages:0,\r\n};\r\n\r\nconst usersReducer = createReducer(initialState, builder => {\r\n  builder\r\n    .addCase(changePage,(state, action)=>{\r\n      if (action.payload) {\r\n        state.currentPageNumber = action.payload;\r\n      }\r\n    }\r\n\r\n    )\r\n    .addCase(matchingUsersFound, (state, action) => {\r\n      if (action.payload) {\r\n        state.matchingUsers = action.payload;\r\n        state.numberOfPages = paginationUtils.getNumberOfPages(action.payload);\r\n      }\r\n    })\r\n    .addCase(matchingUsersNotFound, state => {\r\n      state.error.value = true;\r\n      state.error.code = \"No user matches criteria\";\r\n    })\r\n\r\n    .addCase(fetchUsersFailed, (state, action) => {\r\n      if (action.payload) {\r\n        state.error.value = true;\r\n        state.error.code = action.payload;\r\n      }\r\n    })\r\n\r\n    .addCase(fetchUsersSuccess, (state, action) => {\r\n      if (action.payload) {\r\n        state.doesFetchWork = false;\r\n        state.allUsers = action.payload;\r\n        state.matchingUsers = action.payload;\r\n        state.numberOfPages = paginationUtils.getNumberOfPages(action.payload);        \r\n      }\r\n    })\r\n\r\n    .addCase(fetchUsersRequested, state => {\r\n      state.doesFetchWork = true;\r\n    })\r\n\r\n    .addCase(showError, (state, action) => {\r\n      if (action.payload) {\r\n        state.error.value = true;\r\n        state.error.code = action.payload;\r\n      }\r\n    })\r\n    .addCase(clearError, state => {\r\n      state.error = initialState.error;\r\n    })\r\n\r\n    .addDefaultCase(() => {});\r\n});\r\n\r\nexport default usersReducer;\r\n\r\nexport function fetchUsers() {\r\n  return dispatch => {\r\n    dispatch(fetchUsersRequested());\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        dispatch(fetchUsersSuccess(data));\r\n      })\r\n      .catch(err => dispatch(fetchUsersFailed(\"Podczas pobierania danych nastąpil błąd: \" + err.message)));\r\n  };\r\n}\r\n\r\nexport function searchUsers(pattern) {\r\n  return (dispatch, getState) => {\r\n    var allUsers = getState().users.allUsers;\r\n    if (allUsers && pattern && pattern.length > 0) {\r\n      const matchingUsers = allUsers.filter(item => item.name.toLowerCase().includes(pattern.toLowerCase()));\r\n\r\n      if (matchingUsers.length) {\r\n        dispatch(matchingUsersFound(matchingUsers));\r\n        getState().users.error.value && dispatch(clearError());\r\n      } else {\r\n        dispatch(matchingUsersNotFound());\r\n      }\r\n    } else {\r\n      if (pattern.length === 0) {\r\n        dispatch(matchingUsersFound(allUsers));\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { itemsPerPage } from \"./fixtures\";\r\n\r\nclass PaginationUtils {\r\n  constructor(pageLength) {\r\n    this.pageLength = pageLength;\r\n  }\r\n  getNumberOfPages(array) {\r\n    \r\n    return Math.ceil(array.length / this.pageLength);\r\n  }\r\n\r\n  sliceSinglePageContent(index, array, threshold) {\r\n    if (index > threshold) index = threshold;\r\n\r\n    const first = this.pageLength * (index - 1);\r\n    const last = first + this.pageLength > array.length ? array.length : first + this.pageLength;\r\n    return array.slice(first, last);\r\n  }\r\n}\r\n\r\nexport const paginationUtils = new PaginationUtils(itemsPerPage);\r\n\r\n","export const itemsPerPage = 5;","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ClearButton = props => {\r\n    const { isClearButtonVisible, clearInput } = props;\r\n      return (isClearButtonVisible) ? ( \r\n      <button className=\"form__input-clear\" onClick={clearInput}>\r\n        <svg width=\"32\" height=\"32\" className=\"form__input-clear-svg\" version=\"1.1\" viewBox=\"0 0 32 32\" aria-hidden=\"false\">\r\n          <path d=\"M25.33 8.55l-1.88-1.88-7.45 7.45-7.45-7.45-1.88 1.88 7.45 7.45-7.45 7.45 1.88 1.88 7.45-7.45 7.45 7.45 1.88-1.88-7.45-7.45z\"></path>\r\n        </svg>\r\n      </button>\r\n    ) : null;\r\n  };\r\n\r\n  export default ClearButton;\r\n\r\n  ClearButton.propTypes = {\r\n    isClearButtonVisible:PropTypes.bool,\r\n    clearInput:PropTypes.func,\r\n  }\r\n  ","import * as React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport ClearButton from \"./ClearButton\";\r\n\r\nconst Input = props => {\r\n  const { inputContent, onInputContentChange, onInputClear } = props;\r\n  return (\r\n  <form className='form main__form'>\r\n    <input \r\n    type=\"text\" \r\n    className=\"form__input\" \r\n    value={inputContent} \r\n    onChange={onInputContentChange} \r\n    autoCapitalize=\"none\" \r\n    placeholder=\"Search by user name...\" />\r\n    <ClearButton\r\n          //isClearButtonVisible={inputContent}\r\n          isClearButtonVisible={!!inputContent.length}\r\n          clearInput={onInputClear}\r\n        />\r\n  </form>\r\n  )\r\n};\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n  inputContent: PropTypes.string,\r\n  onInputContentChange: PropTypes.func,\r\n  onInputClear: PropTypes.func\r\n}\r\n","import * as React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Header1 = styled.h1`\r\n  text-align: center;\r\n  margin: 30px 0;\r\n  font-size: 32px;\r\n\r\n  @media only screen and (max-width: 667px) {\r\n\r\n    margin-top: calc(15px + 15 * ((100vw - 320px) / 347));\r\n    margin-bottom: calc(15px + 15 * ((100vw - 320px) / 347));\r\n  }\r\n\r\n  @media only screen and (max-width: 500px) {\r\n    font-size: calc(26px + 6 * ((100vw - 320px) / 180));\r\n  }\r\n`\r\n\r\nconst Header = () => {\r\n  return <Header1>Users List</Header1>;\r\n};\r\nexport default React.memo(Header);\r\n","import { default as UnconnectedPagination } from \"@material-ui/lab/Pagination\";\r\nimport * as React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePage } from \"../redux/usersReducer\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst mapStateToProps = state => ({\r\n  page: state.users.currentPageNumber,\r\n  count: state.users.numberOfPages,\r\n  variant: \"outlined\",\r\n  color: \"secondary\",\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: (event, value) => dispatch(changePage(value)),\r\n});\r\n\r\nconst Pagination = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(\r\n  withStyles({\r\n    root: {\r\n      margin: \"40px auto\",\r\n      \"@media (max-width: 666px)\": { marginTop: \"calc(15px + 25 * ((100vw - 320px) / 347));\", marginBottom:\"calc(15px + 25 * ((100vw - 320px) / 347));\" },\r\n      \"& ul\": { justifyContent: \"center\" },\r\n      \"& ul li\": {paddingLeft: \"5px\", paddingRight: \"5px\" },\r\n      \"& button\": { background: \"rgba(122, 194, 33, 0.8)\", color: \"white\", border: \"1px solid #298B01\", boxShadow: \"inset 0 0 5px #298B01\" },\r\n      \"& button.Mui-selected\": { background: \"#F5C200\", color: \"black\", border: \"1px solid #EE760A\", boxShadow: \"inset 0 0 5px #EE760A\" },\r\n    },\r\n  })(React.memo(UnconnectedPagination))\r\n);\r\n\r\nUnconnectedPagination.propTypes = {\r\n  page: PropTypes.number,\r\n  count: PropTypes.number,\r\n  variant: PropTypes.string,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Pagination;\r\n","import * as React from \"react\";\r\nimport styled, {css, keyframes}from 'styled-components';\r\n\r\nconst animation = keyframes` \r\n  0% {font-size: 12px;}\r\n  50% {font-size: 32px;}\r\n  100% {font-size:12px;}\r\n  `\r\n\r\n  const animationRule = css`\r\n  ${animation} 1s infinite;\r\n`\r\nconst Spinner= styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  color: rgb(5, 98, 121);\r\n  width:100px auto;\r\n  height:40px;\r\n  animation: ${animationRule};\r\n`\r\n\r\nconst Loader = React.memo(()=><Spinner>Loading...</Spinner>);\r\n export default Loader","import React, { useState, useEffect, useCallback, lazy, Suspense } from \"react\";\nimport {fetchUsers, searchUsers} from './redux/usersReducer';\nimport {connect} from \"react-redux\";\nimport Input from './components/Input';\nimport Header from './components/Header';\nimport Pagination from './components/Pagination';\nimport Loader from './components/Loader';\nimport './App.css';\n\nconst UsersList = lazy(()=>import(\"./components/UsersList\"));\nconst ErrorMessageBox = lazy(()=>import(\"./components/ErrorMessageBox\"));\n\nconst initialPattern ='';\n\nlet App =(props)=>{\nconst {fetchUsers, searchUsers} = props;\n\n  const [pattern, setPattern] = useState(initialPattern);\n\n  const updatePattern = useCallback(e => {\n    e.preventDefault();\n    setPattern(e.target.value);\n  },[])\n  \n  const clearInput = useCallback(e => {\n    e.preventDefault();\n    setPattern(initialPattern);\n  },[])\n\n  useEffect(() => {\n    fetchUsers();\n  }, [fetchUsers]);\n\n  useEffect(() => {\n    searchUsers(pattern);\n  }, [pattern, searchUsers]);\n\n  return (\n  <main className = 'main'>\n  \n  <Header />\n  \n  <Suspense fallback= {<Loader />}>\n    <Input inputContent={pattern} onInputContentChange={updatePattern} onInputClear ={clearInput} />\n    <Pagination />\n    <UsersList />\n    <ErrorMessageBox />\n  </Suspense>\n  </main>\n  );\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  fetchUsers: () => dispatch(fetchUsers()),  \n  searchUsers:(data)=>dispatch(searchUsers(data)),\n});\n\nApp = connect(null, mapDispatchToProps)(App);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport usersReducer from './redux/usersReducer';\n\nexport const store = configureStore({\n  reducer: { users:usersReducer },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(thunk),\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}