{"version":3,"sources":["components/ErrorMessageBox.jsx"],"names":["MyAlert","withStyles","root","background","color","fontSize","fontWeight","border","boxShadow","Alert","ErrorMessageBox","props","isErrorMessageOpen","clearError","errorMessageText","open","autoHideDuration","onClose","severity","variant","connect","state","users","error","value","code","dispatch"],"mappings":"mGAAA,+DAQMA,EAAUC,YAAW,CACzBC,KAAM,CACJC,WAAY,UACZC,MAAO,QACPC,SAAU,UACVC,WAAY,OACZC,OAAQ,oBACRC,UAAW,kMAPCP,CASbQ,KAECC,EAAkB,SAAAC,GACpB,IAAQC,EAAqDD,EAArDC,mBAAoBC,EAAiCF,EAAjCE,WAAYC,EAAqBH,EAArBG,iBAExC,OAAOF,EACL,cAAC,IAAD,CAAUG,KAAMH,EAAoBI,iBAAkB,IAAMC,QAASJ,EAArE,SACE,eAACb,EAAD,CAASkB,SAAS,UAAUC,QAAQ,SAApC,8BAEE,uBACCL,EACD,4BAGF,MAYNJ,EAAkBU,aALM,SAAAC,GAAK,MAAK,CAChCT,mBAAoBS,EAAMC,MAAMC,MAAMC,MACtCV,iBAAkBO,EAAMC,MAAMC,MAAME,SANX,SAAAC,GAAQ,MAAK,CACtCb,WAAY,kBAAMa,EAASb,mBAQXO,CAA6CV,GAEhDA","file":"static/js/5.fbf09386.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearError } from \"../redux/usersReducer\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MyAlert = withStyles({\r\n  root: {\r\n    background: \"#F7DE00\",\r\n    color: \"black\",\r\n    fontSize: \"1.25rem\",\r\n    fontWeight: \"bold\",\r\n    border: \"2px solid #F60A13\",\r\n    boxShadow: \" 0 0 5px #4d684d, 0 1px 2px rgba(0,0,0,0.07), 0 2px 4px rgba(0,0,0,0.07), 0 4px 8px rgba(0,0,0,0.07), 0 8px 16px rgba(0,0,0,0.07), 0 16px 32px rgba(0,0,0,0.07), 0 32px 64px rgba(0,0,0,0.07)\",\r\n  },\r\n})(Alert);\r\n\r\nlet ErrorMessageBox = props => {\r\n  const { isErrorMessageOpen, clearError, errorMessageText } = props;\r\n\r\n  return isErrorMessageOpen ? (\r\n    <Snackbar open={isErrorMessageOpen} autoHideDuration={5000} onClose={clearError}>\r\n      <MyAlert severity=\"success\" variant=\"filled\">\r\n        An error occured:\r\n        <br />\r\n        {errorMessageText}\r\n        <br />\r\n      </MyAlert>\r\n    </Snackbar>\r\n  ) : null;\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  clearError: () => dispatch(clearError()),\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n  isErrorMessageOpen: state.users.error.value,\r\n  errorMessageText: state.users.error.code,\r\n});\r\n\r\nErrorMessageBox = connect(mapStateToProps, mapDispatchToProps)(ErrorMessageBox);\r\n\r\nexport default ErrorMessageBox;\r\n\r\nErrorMessageBox.propTypes = {\r\n  isErrorMessageOpen: PropTypes.bool,\r\n  errorMessageText: PropTypes.string,\r\n  clearError: PropTypes.func,\r\n};\r\n"],"sourceRoot":""}